generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id
  username       String          @unique
  email          String          @unique
  credits        Int             @default(0)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  images         UserToImage[]
  payments       Payment[]
  billingDetails BillingDetails?
}

model UserToImage {
  id             String   @id @default(uuid())
  userId         String
  imageId        String
  prompt         String
  negativePrompt String?
  guidanceScale  Float
  steps          Int
  createdAt      DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  image Image @relation(fields: [imageId], references: [id])
}

model Image {
  id             String   @id @default(uuid())
  categoryId     String?
  url            String
  completionTime Float
  createdAt      DateTime @default(now())
  userToImages UserToImage[]
}

model Payment {
  id               String   @id @default(uuid())
  userId           String
  amount           Float
  currency         String
  creditsPurchased Int
  status           String
  createdAt        DateTime @default(now())

  user User @relation(fields: [userId], references: [id]) // Relation fixed
}

model BillingDetails {
  id              String   @id @default(uuid())
  userId          String   @unique
  user            User     @relation(fields: [userId], references: [id])
  cardType        String
  cardLastFour    String
  billingAddress  String
  nextBillingDate DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}
