generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String       @id @default(uuid())
  firstName         String
  lastName          String
  email             String       @unique
  company           String?
  subscription      Subscription?
  subscriptionId    String
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  images            Image[]
  payments          Payment[]
  billingDetails    BillingDetails?
}

model Plan {
  id                String       @id @default(uuid())
  name              String
  monthlyCost       Float
  maxImagesPerMonth Int
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
  subscriptions     Subscription[]
}

model Image {
  id                String       @id @default(uuid())
  userId            String
  user              User         @relation(fields: [userId], references: [id])
  url               String
  prompt            String
  negativePrompt    String?
  guidanceScale     Float
  steps             Int
  initialImageUrl   String?
  createdAt         DateTime     @default(now())
}

model Payment {
  id                String       @id @default(uuid())
  userId            String
  user              User         @relation(fields: [userId], references: [id])
  amount            Float
  currency          String
  status            String
  createdAt         DateTime     @default(now())
}

model BillingDetails {
  id                String       @id @default(uuid())
  userId            String       @unique
  user              User         @relation(fields: [userId], references: [id])
  cardType          String
  cardLastFour      String
  billingAddress    String
  nextBillingDate   DateTime
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}

model Subscription {
  id                String       @id @default(uuid())
  userId            String       @unique
  user              User         @relation(fields: [userId], references: [id])
  planId            String
  plan              Plan         @relation(fields: [planId], references: [id])
  status            String
  imagesGeneratedThisMonth Int
  billingCycleStart DateTime
  billingCycleEnd   DateTime
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt
}
